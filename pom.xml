<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
		<relativePath/>
	</parent>
	<groupId>org.jugistanbul</groupId>
	<artifactId>hibernate-search</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hibernate-search</name>
	<description>Demo project for how to use Hibernate Search with Spring Boot</description>

	<developers>
		<developer>
			<name>Hüseyin Akdoğan</name>
			<id>HuseyinAkdogan</id>
			<email>hakdogan@kodcu.com</email>
			<url>https://github.com/hakdogan</url>
			<organization>JUG Istanbul</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+3</timezone>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/hakdogan/hibernate-search</url>
		<connection>https://github.com/hakdogan/hibernate-search.git</connection>
		<developerConnection>scm:git:https://github.com/hakdogan/hibernate-search.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<java.version>8</java.version>
		<postgres.image>postgres:11.3</postgres.image>
		<elasticsearch.image>docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.3</elasticsearch.image>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-mapper-orm</artifactId>
			<version>6.0.0.CR2</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.search</groupId>
			<artifactId>hibernate-search-backend-elasticsearch</artifactId>
			<version>6.0.0.CR2</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.18</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<configuration>
					<images>
						<image>
							<name>${postgres.image}</name>
							<alias>postgresql</alias>
							<run>
								<env>
									<POSTGRES_USER>postgres</POSTGRES_USER>
									<POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
									<POSTGRES_DB>jugistanbul</POSTGRES_DB>
								</env>
								<ports>
									<port>5432:5432</port>
								</ports>
								<log>
									<prefix>PostgreSQL: </prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<wait>
									<tcp>
										<mode>mapped</mode>
										<ports>
											<port>5432</port>
										</ports>
									</tcp>
									<time>10000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>${elasticsearch.image}</name>
							<alias>elasticsearch</alias>
							<run>
								<env>
									<discovery.type>single-node</discovery.type>
								</env>
								<ports>
									<port>9200:9200</port>
								</ports>
								<log>
									<prefix>Elasticsearch: </prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<wait>
									<http>
										<url>http://localhost:9200</url>
										<method>GET</method>
										<status>200</status>
									</http>
									<time>60000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>test-compile</phase>
						<goals>
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
